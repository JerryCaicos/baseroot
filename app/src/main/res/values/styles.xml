<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="@android:style/Theme.Light">
        <!-- Customize your theme here. -->
    </style>

    <declare-styleable name="FlowLayout">
        <attr name="maxLine" format="integer"/>
        <attr name="horizontalSpac" format="dimension|reference"/>
        <attr name="verticalSpac" format="dimension|reference"/>
        <attr name="layoutGravity" format="enum">
            <enum name="alignLeft" value="0"/>
            <enum name="alignCenter" value="1"/>
            <enum name="alignRight" value="2"/>
        </attr>

    </declare-styleable>

    <!-- 自定义控件 BlockView -->
    <declare-styleable name="BlockView">
        <attr name="horizontalSpacing" format="dimension"/>
        <attr name="verticalSpacing" format="dimension"/>
        <attr name="autoMatchBlockWidth" format="boolean"/>
    </declare-styleable>

    <style name="Theme.CustomDialog" parent="android:style/Theme.Dialog">
        <item name="android:windowNoTitle">true</item>
    </style>

    <style name="myProgressBarStyleLarge">
        <item name="android:indeterminateDrawable">@drawable/progress_large_loading</item>
        <item name="android:width">17dip</item>
        <item name="android:height">17dip</item>
    </style>

    <style name="dialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@drawable/ic_dlg_background</item>
        <!-- 背景是否半透明 -->
        <!--
             item
            name="android:backgroundDimEnabled">false</item>
        -->
    </style>

    <style name="customdialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@color/transparent</item>
        <!-- 背景是否半透明 -->
        <!--
             item
            name="android:backgroundDimEnabled">false</item>
        -->
    </style>

    <!-- Base application theme. -->
    <style name="AppThemeTool" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <declare-styleable name="stl_SmartTabLayout">
        <attr name="stl_indicatorAlwaysInCenter" format="boolean" />
        <attr name="stl_indicatorWithoutPadding" format="boolean" />
        <attr name="stl_indicatorInFront" format="boolean" />
        <!--<attr name="stl_indicatorInterpolation" format="enum">
            <enum name="smart" value="0" />
            <enum name="linear" value="1" />
        </attr>-->
        <attr name="stl_indicatorInterpolation" format="string"/>
        <!--<attr name="stl_indicatorGravity" format="enum">
            <enum name="bottom" value="0" />
            <enum name="top" value="1" />
            <enum name="center" value="2" />
        </attr>-->
        <attr name="stl_indicatorGravity" format="string"/>
        <attr name="stl_indicatorColor" format="color" />
        <attr name="stl_indicatorColors" format="reference" />
        <attr name="stl_indicatorThickness" format="dimension" />
        <attr name="stl_indicatorCornerRadius" format="dimension" />
        <attr name="stl_overlineColor" format="color" />
        <attr name="stl_overlineThickness" format="dimension" />
        <attr name="stl_underlineColor" format="color" />
        <attr name="stl_underlineThickness" format="dimension" />
        <attr name="stl_dividerColor" format="color" />
        <attr name="stl_dividerColors" format="reference" />
        <attr name="stl_dividerThickness" format="dimension" />
        <attr name="stl_defaultTabBackground" format="reference" />
        <attr name="stl_defaultTabTextAllCaps" format="boolean" />
        <attr name="stl_defaultTabTextColor" format="color|reference" />
        <attr name="stl_defaultTabTextSize" format="dimension" />
        <attr name="stl_defaultTabTextHorizontalPadding" format="dimension" />
        <attr name="stl_defaultTabTextMinWidth" format="dimension" />
        <attr name="stl_customTabTextLayoutId" format="reference" />
        <attr name="stl_customTabTextViewId" format="reference" />
        <attr name="stl_distributeEvenly" format="boolean" />
        <attr name="stl_clickable" format="boolean" />
        <attr name="stl_defaultTabTextBold" format="boolean" />
        <attr name="stl_dividerHorizontalPadding" format="dimension" />
        <attr name="stl_tabDividerHorizontalPadding" format="boolean" />
        <!--<attr name="stl_titleOffset" format="dimension">
            <enum name="auto_center" value="-1" />
        </attr>-->
        <attr name="stl_titleOffset" format="dimension"/>
        <attr name="stl_drawDecorationAfterTab" format="boolean" />
        <!--<attr name="stl_indicatorWidth" format="dimension">
            <enum name="auto" value="-1" />
        </attr>-->
        <attr name="stl_indicatorWidth" format="dimension"/>
    </declare-styleable>

    <style name="MyCustomTabLayout" parent="Widget.Design.TabLayout">
        <item name="tabIndicatorColor">@color/translucent</item>
        <item name="tabIndicatorHeight">0dp</item>
        <item name="tabPaddingStart">12dp</item>
        <item name="tabPaddingEnd">12dp</item>
        <item name="tabBackground">@color/translucent</item>
        <item name="tabTextAppearance">@style/MyCustomTabTextAppearance</item>
    </style>

    <style name="MyCustomTabTextAppearance" parent="TextAppearance.Design.Tab">
        <item name="android:textSize">16dp</item>
        <item name="android:textColor">@android:color/black</item>
        <!--  false: ImageSpan被渲染  -->
        <item name="textAllCaps">true</item>
    </style>

</resources>
